/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.cdc_demo.data_faker.avro_generated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Shipment table row */
@org.apache.avro.specific.AvroGenerated
public class Shipment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7673805427407758157L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Shipment\",\"namespace\":\"org.cdc_demo.data_faker.avro_generated\",\"doc\":\"Shipment table row\",\"fields\":[{\"name\":\"order_id\",\"type\":\"long\",\"doc\":\"FK to Orders table\"},{\"name\":\"created_on\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Shipment create time\"},{\"name\":\"shipped_on\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Shipment ship time\"},{\"name\":\"updated_on\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Shipment update time\"},{\"name\":\"shipment_status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Shipment status. Can be: SHIPPED | DELIVERED\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Shipment> ENCODER =
      new BinaryMessageEncoder<Shipment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Shipment> DECODER =
      new BinaryMessageDecoder<Shipment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Shipment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Shipment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Shipment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Shipment>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Shipment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Shipment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Shipment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Shipment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** FK to Orders table */
   private long order_id;
  /** Shipment create time */
   private java.time.Instant created_on;
  /** Shipment ship time */
   private java.time.Instant shipped_on;
  /** Shipment update time */
   private java.time.Instant updated_on;
  /** Shipment status. Can be: SHIPPED | DELIVERED */
   private java.lang.String shipment_status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Shipment() {}

  /**
   * All-args constructor.
   * @param order_id FK to Orders table
   * @param created_on Shipment create time
   * @param shipped_on Shipment ship time
   * @param updated_on Shipment update time
   * @param shipment_status Shipment status. Can be: SHIPPED | DELIVERED
   */
  public Shipment(java.lang.Long order_id, java.time.Instant created_on, java.time.Instant shipped_on, java.time.Instant updated_on, java.lang.String shipment_status) {
    this.order_id = order_id;
    this.created_on = created_on.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.shipped_on = shipped_on.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.updated_on = updated_on.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.shipment_status = shipment_status;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return order_id;
    case 1: return created_on;
    case 2: return shipped_on;
    case 3: return updated_on;
    case 4: return shipment_status;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: order_id = (java.lang.Long)value$; break;
    case 1: created_on = (java.time.Instant)value$; break;
    case 2: shipped_on = (java.time.Instant)value$; break;
    case 3: updated_on = (java.time.Instant)value$; break;
    case 4: shipment_status = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'order_id' field.
   * @return FK to Orders table
   */
  public long getOrderId() {
    return order_id;
  }


  /**
   * Sets the value of the 'order_id' field.
   * FK to Orders table
   * @param value the value to set.
   */
  public void setOrderId(long value) {
    this.order_id = value;
  }

  /**
   * Gets the value of the 'created_on' field.
   * @return Shipment create time
   */
  public java.time.Instant getCreatedOn() {
    return created_on;
  }


  /**
   * Sets the value of the 'created_on' field.
   * Shipment create time
   * @param value the value to set.
   */
  public void setCreatedOn(java.time.Instant value) {
    this.created_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'shipped_on' field.
   * @return Shipment ship time
   */
  public java.time.Instant getShippedOn() {
    return shipped_on;
  }


  /**
   * Sets the value of the 'shipped_on' field.
   * Shipment ship time
   * @param value the value to set.
   */
  public void setShippedOn(java.time.Instant value) {
    this.shipped_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'updated_on' field.
   * @return Shipment update time
   */
  public java.time.Instant getUpdatedOn() {
    return updated_on;
  }


  /**
   * Sets the value of the 'updated_on' field.
   * Shipment update time
   * @param value the value to set.
   */
  public void setUpdatedOn(java.time.Instant value) {
    this.updated_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'shipment_status' field.
   * @return Shipment status. Can be: SHIPPED | DELIVERED
   */
  public java.lang.String getShipmentStatus() {
    return shipment_status;
  }


  /**
   * Sets the value of the 'shipment_status' field.
   * Shipment status. Can be: SHIPPED | DELIVERED
   * @param value the value to set.
   */
  public void setShipmentStatus(java.lang.String value) {
    this.shipment_status = value;
  }

  /**
   * Creates a new Shipment RecordBuilder.
   * @return A new Shipment RecordBuilder
   */
  public static org.cdc_demo.data_faker.avro_generated.Shipment.Builder newBuilder() {
    return new org.cdc_demo.data_faker.avro_generated.Shipment.Builder();
  }

  /**
   * Creates a new Shipment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Shipment RecordBuilder
   */
  public static org.cdc_demo.data_faker.avro_generated.Shipment.Builder newBuilder(org.cdc_demo.data_faker.avro_generated.Shipment.Builder other) {
    if (other == null) {
      return new org.cdc_demo.data_faker.avro_generated.Shipment.Builder();
    } else {
      return new org.cdc_demo.data_faker.avro_generated.Shipment.Builder(other);
    }
  }

  /**
   * Creates a new Shipment RecordBuilder by copying an existing Shipment instance.
   * @param other The existing instance to copy.
   * @return A new Shipment RecordBuilder
   */
  public static org.cdc_demo.data_faker.avro_generated.Shipment.Builder newBuilder(org.cdc_demo.data_faker.avro_generated.Shipment other) {
    if (other == null) {
      return new org.cdc_demo.data_faker.avro_generated.Shipment.Builder();
    } else {
      return new org.cdc_demo.data_faker.avro_generated.Shipment.Builder(other);
    }
  }

  /**
   * RecordBuilder for Shipment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Shipment>
    implements org.apache.avro.data.RecordBuilder<Shipment> {

    /** FK to Orders table */
    private long order_id;
    /** Shipment create time */
    private java.time.Instant created_on;
    /** Shipment ship time */
    private java.time.Instant shipped_on;
    /** Shipment update time */
    private java.time.Instant updated_on;
    /** Shipment status. Can be: SHIPPED | DELIVERED */
    private java.lang.String shipment_status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.cdc_demo.data_faker.avro_generated.Shipment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.order_id)) {
        this.order_id = data().deepCopy(fields()[0].schema(), other.order_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.created_on)) {
        this.created_on = data().deepCopy(fields()[1].schema(), other.created_on);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.shipped_on)) {
        this.shipped_on = data().deepCopy(fields()[2].schema(), other.shipped_on);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.updated_on)) {
        this.updated_on = data().deepCopy(fields()[3].schema(), other.updated_on);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.shipment_status)) {
        this.shipment_status = data().deepCopy(fields()[4].schema(), other.shipment_status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Shipment instance
     * @param other The existing instance to copy.
     */
    private Builder(org.cdc_demo.data_faker.avro_generated.Shipment other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.order_id)) {
        this.order_id = data().deepCopy(fields()[0].schema(), other.order_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created_on)) {
        this.created_on = data().deepCopy(fields()[1].schema(), other.created_on);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shipped_on)) {
        this.shipped_on = data().deepCopy(fields()[2].schema(), other.shipped_on);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.updated_on)) {
        this.updated_on = data().deepCopy(fields()[3].schema(), other.updated_on);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shipment_status)) {
        this.shipment_status = data().deepCopy(fields()[4].schema(), other.shipment_status);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'order_id' field.
      * FK to Orders table
      * @return The value.
      */
    public long getOrderId() {
      return order_id;
    }


    /**
      * Sets the value of the 'order_id' field.
      * FK to Orders table
      * @param value The value of 'order_id'.
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder setOrderId(long value) {
      validate(fields()[0], value);
      this.order_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'order_id' field has been set.
      * FK to Orders table
      * @return True if the 'order_id' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'order_id' field.
      * FK to Orders table
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder clearOrderId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_on' field.
      * Shipment create time
      * @return The value.
      */
    public java.time.Instant getCreatedOn() {
      return created_on;
    }


    /**
      * Sets the value of the 'created_on' field.
      * Shipment create time
      * @param value The value of 'created_on'.
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder setCreatedOn(java.time.Instant value) {
      validate(fields()[1], value);
      this.created_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'created_on' field has been set.
      * Shipment create time
      * @return True if the 'created_on' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'created_on' field.
      * Shipment create time
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder clearCreatedOn() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipped_on' field.
      * Shipment ship time
      * @return The value.
      */
    public java.time.Instant getShippedOn() {
      return shipped_on;
    }


    /**
      * Sets the value of the 'shipped_on' field.
      * Shipment ship time
      * @param value The value of 'shipped_on'.
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder setShippedOn(java.time.Instant value) {
      validate(fields()[2], value);
      this.shipped_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'shipped_on' field has been set.
      * Shipment ship time
      * @return True if the 'shipped_on' field has been set, false otherwise.
      */
    public boolean hasShippedOn() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'shipped_on' field.
      * Shipment ship time
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder clearShippedOn() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_on' field.
      * Shipment update time
      * @return The value.
      */
    public java.time.Instant getUpdatedOn() {
      return updated_on;
    }


    /**
      * Sets the value of the 'updated_on' field.
      * Shipment update time
      * @param value The value of 'updated_on'.
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder setUpdatedOn(java.time.Instant value) {
      validate(fields()[3], value);
      this.updated_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_on' field has been set.
      * Shipment update time
      * @return True if the 'updated_on' field has been set, false otherwise.
      */
    public boolean hasUpdatedOn() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'updated_on' field.
      * Shipment update time
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder clearUpdatedOn() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipment_status' field.
      * Shipment status. Can be: SHIPPED | DELIVERED
      * @return The value.
      */
    public java.lang.String getShipmentStatus() {
      return shipment_status;
    }


    /**
      * Sets the value of the 'shipment_status' field.
      * Shipment status. Can be: SHIPPED | DELIVERED
      * @param value The value of 'shipment_status'.
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder setShipmentStatus(java.lang.String value) {
      validate(fields()[4], value);
      this.shipment_status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'shipment_status' field has been set.
      * Shipment status. Can be: SHIPPED | DELIVERED
      * @return True if the 'shipment_status' field has been set, false otherwise.
      */
    public boolean hasShipmentStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'shipment_status' field.
      * Shipment status. Can be: SHIPPED | DELIVERED
      * @return This builder.
      */
    public org.cdc_demo.data_faker.avro_generated.Shipment.Builder clearShipmentStatus() {
      shipment_status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Shipment build() {
      try {
        Shipment record = new Shipment();
        record.order_id = fieldSetFlags()[0] ? this.order_id : (java.lang.Long) defaultValue(fields()[0]);
        record.created_on = fieldSetFlags()[1] ? this.created_on : (java.time.Instant) defaultValue(fields()[1]);
        record.shipped_on = fieldSetFlags()[2] ? this.shipped_on : (java.time.Instant) defaultValue(fields()[2]);
        record.updated_on = fieldSetFlags()[3] ? this.updated_on : (java.time.Instant) defaultValue(fields()[3]);
        record.shipment_status = fieldSetFlags()[4] ? this.shipment_status : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Shipment>
    WRITER$ = (org.apache.avro.io.DatumWriter<Shipment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Shipment>
    READER$ = (org.apache.avro.io.DatumReader<Shipment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










